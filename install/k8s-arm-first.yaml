apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-arm-first
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8s-arm-first-cluster-admin
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    namespace: kube-system
    name: k8s-arm-first
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: k8s-arm-first-config
  namespace: kube-system
data:
  config.yaml: |
    apiVersion: kubescheduler.config.k8s.io/v1alpha1
    kind: KubeSchedulerConfiguration
    schedulerName: k8s-arm-first
    algorithmSource:
      policy:
        configMap:
          namespace: kube-system
          name: k8s-arm-first-policy
    leaderElection:
      leaderElect: true
      lockObjectName: k8s-arm-first
      lockObjectNamespace: kube-system
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: k8s-arm-first-policy
  namespace: kube-system
data:
 policy.cfg : |
  {
    "kind" : "Policy",
    "apiVersion" : "v1",
    "predicates" : [
      {"name" : "PodFitsHostPorts"},
      {"name" : "PodFitsResources"},
      {"name" : "NoDiskConflict"},
      {"name" : "MatchNodeSelector"},
      {"name" : "HostName"}
    ],
    "priorities" : [
      {"name" : "LeastRequestedPriority", "weight" : 1},
      {"name" : "BalancedResourceAllocation", "weight" : 1},
      {"name" : "ServiceSpreadingPriority", "weight" : 1},
      {"name" : "EqualPriority", "weight" : 1}
    ],
    "extenders" : [{
      "urlPrefix": "http://localhost/scheduler",
      "filterVerb": "predicates/always_true",
      "prioritizeVerb": "priorities/zero_score",
      "preemptVerb": "preemption",
      "bindVerb": "",
      "weight": 1,
      "enableHttps": false,
      "nodeCacheCapable": false
    }],
    "hardPodAffinitySymmetricWeight" : 10
  }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-arm-first
  namespace: kube-system
  labels:
    app: k8s-arm-first
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-arm-first
  template:
    metadata:
      labels:
        app: k8s-arm-first
    spec:
      serviceAccountName: k8s-arm-first
      volumes:
      - name: k8s-arm-first-config
        configMap:
          name: k8s-arm-first-config
      containers:
      - name: k8s-arm-first-ctr
        image: gcr.io/google_containers/hyperkube:v1.16.3
        imagePullPolicy: IfNotPresent
        args:
        - kube-scheduler
        - --config=/k8s-arm-first/config.yaml
        - -v=4
        volumeMounts:
        - name: k8s-arm-first-config
          mountPath: /k8s-arm-first
      - name: k8s-arm-first-extender-ctr
        image: a/b:c
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /version
            port: 80
        readinessProbe:
          httpGet:
            path: /version
            port: 80
        ports:
          - containerPort: 80

